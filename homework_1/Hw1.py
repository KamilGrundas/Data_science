# -*- coding: utf-8 -*-
"""Hw1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DNxIfsrfFbeEARl_9228YXSKE9z1WBxO
"""

import numpy as np

"""Create a one-dimensional array (vector) with the first 10 positive integers and display its value."""

a1 = np.arange(1, 11, dtype=int)

a1

"""Create a two-dimensional array (matrix) of size 3x3, fill it with zeros, and display its value."""

a2 = np.zeros((3, 3), dtype=int)

a2

"""Create a 5x5 array, fill it with random integers from 1 to 10, and display its value."""

a3 = np.random.randint(1, 11, (5, 5))

a3

"""Create a 4x4 array, fill it with random real numbers from 0 to 1, and display its value."""

a4 = np.random.random((4, 4))

a4

"""Create two one-dimensional arrays of size 5, fill them with random integers from 1 to 10, and perform addition, subtraction, and multiplication operations on them."""

a5 = np.random.randint(1, 11, 5)
b5 = np.random.randint(1, 11, 5)

a5, b5, a5+b5, a5-b5, a5*b5

"""Create two vectors of size 7, fill them with random numbers, and find their dot product."""

a6 = np.random.random(7)
b6 = np.random.random(7)
dot_product_6 = np.dot(a6,b6)

a6,b6,dot_product_6

"""Create two matrices of sizes 2x2 and 2x3, fill them with random integers from 1 to 10, and multiply them."""

a7 = np.random.randint(1, 11, (2, 2))
b7 = np.random.randint(1, 11, (2, 3))
multiply_7 = np.dot(a7,b7)

a7,b7,multiply_7

"""Create a 3x3 matrix, fill it with random integers from 1 to 10, and find its inverse."""

a8 = np.random.randint(1, 11, (3, 3))
a8_inv = np.linalg.inv(a8)

a8, a8_inv

"""Create a 4x4 matrix, fill it with random real numbers from 0 to 1, and transpose it."""

a9 = np.random.random((4, 4))
a9_transposed = a9.T

a9,a9_transposed

"""Create a matrix of size 3x4 and a vector of size 4, fill them with random integers from 1 to 10, and multiply the matrix by the vector."""

a10 = np.random.randint(1, 11, (3, 4))
b10 = np.random.randint(1, 11, 4)
multiply_10 = np.dot(a10,b10)

a10,b10,multiply_10

"""Create a matrix of size 2x3 and a vector of size 3, fill them with random real numbers from 0 to 1, and multiply the matrix by the vector."""

a11 = np.random.random((2, 3))
b11 = np.random.random(3)
multiply_11 = np.dot(a11,b11)

a11,b11,multiply_11

"""Create two matrices of size 2x2, fill them with random integers from 1 to 10, and perform element-wise multiplication."""

a12 = np.random.randint(1, 11, (2, 2))
b12 = np.random.randint(1, 11, (2, 2))
multiply_12 = a12*b12

a12,b12,multiply_12

"""Create two matrices of size 2x2, fill them with random integers from 1 to 10, and find their matrix product."""

a13 = np.random.randint(1, 11, (2, 2))
b13 = np.random.randint(1, 11, (2, 2))
dot_product_13 = np.dot(a13,b13)

a13,b13,dot_product_13

"""Create a 5x5 matrix, fill it with random integers from 1 to 100, and find the sum of matrix elements."""

a14 = np.random.randint(1, 101, (5, 5))
sum_14 = np.sum(a14)

a14, sum_14

"""Create two matrices of size 4x4, fill them with random integers from 1 to 10, and find their difference."""

a15 = np.random.randint(1, 11, (4, 4))
b15 = np.random.randint(1, 11, (4, 4))
difference_15 = a15-b15

a15,b15,difference_15

"""Create a 3x3 matrix, fill it with random real numbers from 0 to 1, and find a column vector containing the sum of elements of each row of the matrix."""

a16 = np.random.random((3,3))
sum_vector_16 = np.sum(a16,axis=1)

a16,sum_vector_16

"""Create a matrix of size 3x4 with arbitrary integers and create a matrix with the squares of those numbers."""

a17 = np.array([[5,1,4,8],
                [1,0,12,31],
                [7,2,3,1],
                [9,2,3,6]])
a17_square = np.square(a17)

a17,a17_square

"""Create a vector of size 4, fill it with random integers from 1 to 50, and find the vector of square roots of those numbers."""

a18 = np.random.randint(1,51,4)
a18_square_root = np.sqrt(a18)

a18,a18_square_root
